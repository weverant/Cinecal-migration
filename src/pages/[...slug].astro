---
import Layout from '../layouts/Layout.astro';
import data from '../data/cine-data.json';

const images = await Astro.glob('/src/images/*/*').then((files) => {
    return files.map((file) => file.default);
});

let fileName = [];

const months = [
    'janvier',
    'fevrier',
    'mars',
    'avril',
    'mai',
    'juin',
    'juillet',
    'aout',
    'septembre',
    'octobre',
    'novembre',
    'decembre',
];

images.forEach((image) => {
    fileName.push(image.replace(/^.*[\\\/]/, ''));
});

const getImage = (month, name) => {
    const filter = fileName.filter((el) => el.startsWith(`${month}-${name}`));

    return images[fileName.indexOf(filter[0])];
};

export async function getStaticPaths() {
    let pages = [];

    Object.entries(data).forEach(([key, value]) => {
        value.forEach((el, i) =>
            pages.push({
                slug: `${key}/${el.day}`,
                index: i,
                formattedMonth: key,
                day: el.day,
                month: el.month,
                year: el.year,
                title: el.title,
                description: el.description,
                details: el.details,
            })
        );
    });

    return pages.map(({ slug, ...props }) => {
        return {
            params: { slug },
            props: { ...props },
        };
    });
}

const props = Astro.props;

const previousPage = () => {
    if (props.index === 0) return;

    return props.index >= 10 ? props.index : `0${props.index}`;
};

const nextPage = () => {
    if (props.index + 2 > data[props.formattedMonth].length) return;

    return props.index >= 8 ? props.index + 2 : `0${props.index + 2}`;
};

const { slug } = Astro.params;
---

<Layout title={`${props.title} | Cinecal`}>
    <div class='page page--content'>
        <div class='content'>
            <span class='mois'>{props.month}</span>
            <h2 class='title title__event'>{props.title}</h2>
            <div class='content__text'>
                <div class='content__img'>
                    <img
                        src={getImage(
                            months.indexOf(props.formattedMonth) + 1,
                            props.day
                        )}
                        alt=''
                    />
                </div>
                <div class='content__desc'>
                    <div class='info'>
                        <div class='date'>
                            <div class='date__content'>
                                <span>{props.day}</span>
                                <span>{props.month}</span>
                            </div>
                        </div>
                        <span class='info__year'>{props.year}</span>
                    </div>
                    <div class='text'>
                        <p>{props.description}</p>
                        <p>{props.details}</p>
                    </div>
                    <div class='arrow'>
                        {
                            props.index > 0 && (
                                <a
                                    class='btn btn__left'
                                    href={`/${
                                        props.formattedMonth
                                    }/${previousPage()}`}
                                    id='prev-day'
                                    data-day={props.day}
                                >
                                    Jour précédent
                                </a>
                            )
                        }
                        {
                            props.index + 1 <
                                data[props.formattedMonth].length && (
                                <a
                                    class='btn btn__right'
                                    href={`/${
                                        props.formattedMonth
                                    }/${nextPage()}`}
                                    id='next-day'
                                >
                                    Jour suivant
                                </a>
                            )
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>
